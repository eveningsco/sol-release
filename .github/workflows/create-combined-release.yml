name: Create Combined Release

on:
  repository_dispatch:
    types: [new_sol_release]
  workflow_dispatch:  # Allow manual triggering

jobs:
  create-combined-release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Get current date
      id: date
      run: echo "date=$(date +'%m%d%Y_%H-%M-%S')" >> $GITHUB_OUTPUT
    
    - name: Create working directory
      run: mkdir -p downloads
    
    - name: Download latest sol-server
      run: |
        # Get latest release info
        SERVER_RELEASE_URL=$(curl -s https://api.github.com/repos/${{ github.repository_owner }}/sol-server/releases/latest | jq -r '.assets[0].browser_download_url')
        if [ ! -z "$SERVER_RELEASE_URL" ]; then
          curl -L -o downloads/sol-server "$SERVER_RELEASE_URL"
          chmod +x downloads/sol-server
        else
          echo "No sol-server release found"
          exit 1
        fi
    
    - name: Download latest sol-software
      run: |
        # Get latest release info
        SOFTWARE_RELEASE_URL=$(curl -s https://api.github.com/repos/${{ github.repository_owner }}/sol-software/releases/latest | jq -r '.assets[0].browser_download_url')
        if [ ! -z "$SOFTWARE_RELEASE_URL" ]; then
          curl -L -o downloads/sol-software "$SOFTWARE_RELEASE_URL"
          chmod +x downloads/sol-software
        else
          echo "No sol-software release found"
          exit 1
        fi
    
    - name: Create ZIP file
      run: |
        cd downloads
        zip -r ../sol-release-${{ steps.date.outputs.date }}.zip *
        cd ..
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: Release-${{ steps.date.outputs.date }}
        release_name: Combined Release ${{ steps.date.outputs.date }}
        body: |
          Combined SOL release package
          Build date: ${{ steps.date.outputs.date }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: sol-release-${{ steps.date.outputs.date }}.zip
        asset_name: sol-release-${{ steps.date.outputs.date }}.zip
        asset_content_type: application/zip